{"version":3,"sources":["styled/styledApp.js","pages/Home.js","pages/About.js","styled/styledSkill.js","pages/Skill.js","styled/styledPortfolio.js","pages/Portfolio.js","pages/Contact.js","App.js","serviceWorker.js","index.js","images/pexels-simon-migaj-1920x1212.jpg"],"names":["Layout","styled","div","backGroundImage","Sider","Right","Header","Content","Footer","Home","About","SkillContainer","SkillCard","Skill","className","MasonryOut","Portfolio","Contact","App","basename","process","to","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"+gEAEO,IAAMA,EAASC,IAAOC,IAAV,IAGSC,KAQfC,EAAQH,IAAOC,IAAV,KAeLG,EAAQJ,IAAOC,IAAV,KAQLI,EAASL,IAAOC,IAAV,KAONK,EAAUN,IAAOC,IAAV,KAsBPM,EAASP,IAAOC,IAAV,KCvDJO,MARf,WACI,OACI,6BACI,4CCKGC,MARf,WACI,OACI,6BACI,0C,gbCHL,IAAMC,EAAiBV,IAAOC,IAAV,KAOdU,EAAYX,IAAOC,IAAV,KCYPW,MAlBf,WACI,OACI,kBAACF,EAAD,KACI,kBAAC,IAAD,CAAiBG,UAAU,oBACvB,kBAACF,EAAD,gBACA,kBAACA,EAAD,gBACA,kBAACA,EAAD,gBACA,kBAACA,EAAD,gBACA,kBAACA,EAAD,gBACA,kBAACA,EAAD,gBACA,kBAACA,EAAD,gBACA,kBAACA,EAAD,gBACA,kBAACA,EAAD,mB,imBCbT,IAAMG,EAAad,IAAOC,IAAV,K,iBCeRc,MAdf,WACI,OACI,kBAACD,EAAD,KACI,kBAAC,IAAD,KAEI,2CACA,2CACA,2CACA,8CCDDE,MARf,WACI,OACI,6BACI,gD,eC6DGC,MAnDf,WACI,OACI,kBAAC,IAAD,CAAQC,SAAUC,yBACd,kBAACpB,EAAD,KACI,kBAACI,EAAD,KACI,qCACA,4BACI,4BACI,kBAAC,IAAD,CAAMiB,GAAG,KAAT,SAEJ,4BACI,kBAAC,IAAD,CAAMA,GAAG,UAAT,UAEJ,4BACI,kBAAC,IAAD,CAAMA,GAAG,UAAT,UAEJ,4BACI,kBAAC,IAAD,CAAMA,GAAG,cAAT,cAEJ,4BACI,kBAAC,IAAD,CAAMA,GAAG,YAAT,cAIZ,kBAAChB,EAAD,KACI,kBAACC,EAAD,eACA,kBAACC,EAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOe,OAAK,EAACC,KAAK,IAAIC,UAAW,kBAAM,kBAAC,EAAD,SACvC,kBAAC,IAAD,CAAOD,KAAK,SAASC,UAAW,kBAAM,kBAAC,EAAD,SACtC,kBAAC,IAAD,CAAOD,KAAK,SAASC,UAAW,kBAAM,kBAAC,EAAD,SACtC,kBAAC,IAAD,CACID,KAAK,aACLC,UAAW,kBAAM,kBAAC,EAAD,SAErB,kBAAC,IAAD,CACID,KAAK,WACLC,UAAW,kBAAM,kBAAC,EAAD,SAErB,kBAAC,IAAD,CACIA,UAAW,kBAAM,oDAI7B,kBAAChB,EAAD,mBC/CAiB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,mBEzI5BC,EAAOC,QAAU,IAA0B,0D","file":"static/js/main.a67c4666.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport backGroundImage from \"../images/pexels-simon-migaj-1920x1212.jpg\";\r\nexport const Layout = styled.div`\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background-image: url(${backGroundImage});\r\n    display: flex;\r\n    background-repeat: no-repeat;\r\n    background-size: auto;\r\n    background-position: center;\r\n    background-size: cover;\r\n`;\r\n\r\nexport const Sider = styled.div`\r\n    //background-color: green;\r\n    width: 20%;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    & li {\r\n        list-style-type: none;\r\n    }\r\n    & a {\r\n        color: #fff;\r\n    }\r\n`;\r\n\r\nexport const Right = styled.div`\r\n    //background-color: gray;\r\n    height: 100%;\r\n    width: 80%;\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n    //background-color: yellow;\r\n    height: 10%;\r\n    font-size: 2rem;\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\nexport const Content = styled.div`\r\n    height: 80%;\r\n    background: hsla(0, 0%, 100%, 0.3);\r\n    position: relative;\r\n    overflow: hidden;\r\n    margin: 1rem;\r\n    border-radius: 5px;\r\n    box-shadow: rgba(0, 0, 0, 0.07) 0px 1px 2px, rgba(0, 0, 0, 0.07) 0px 2px 4px,\r\n        rgba(0, 0, 0, 0.07) 0px 4px 8px, rgba(0, 0, 0, 0.07) 0px 8px 16px,\r\n        rgba(0, 0, 0, 0.07) 0px 16px 32px, rgba(0, 0, 0, 0.07) 0px 32px 64px;\r\n    &::before {\r\n        content: \"\";\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        filter: blur(20px);\r\n        z-index: -1;\r\n        margin: -30px;\r\n    }\r\n`;\r\nexport const Footer = styled.div`\r\n    color: #fff;\r\n    height: 10%;\r\n    font-size: 2rem;\r\n    display: inline-flex;\r\n    justify-content: center;\r\n`;\r\n","import React from \"react\";\r\n\r\nfunction Home() {\r\n    return (\r\n        <div>\r\n            <h1>home pages</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nfunction About() {\r\n    return (\r\n        <div>\r\n            <h1>About me</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SkillContainer = styled.div`\r\n    width: 100%;\r\n    & .scroll-container {\r\n        display: flex;\r\n    }\r\n`;\r\n\r\nexport const SkillCard = styled.div`\r\n    width: 200px;\r\n    min-width: 200px;\r\n    height: 100px;\r\n    display: flex;\r\n    color: #fff;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 5px;\r\n    background-color: #113679;\r\n`;\r\n","import React from \"react\";\r\nimport ScrollContainer from \"react-indiana-drag-scroll\";\r\nimport { SkillCard, SkillContainer } from \"../styled/styledSkill\";\r\nfunction Skill() {\r\n    return (\r\n        <SkillContainer>\r\n            <ScrollContainer className=\"scroll-container\">\r\n                <SkillCard>Skill 1</SkillCard>\r\n                <SkillCard>Skill 2</SkillCard>\r\n                <SkillCard>Skill 3</SkillCard>\r\n                <SkillCard>Skill 4</SkillCard>\r\n                <SkillCard>Skill 5</SkillCard>\r\n                <SkillCard>Skill 6</SkillCard>\r\n                <SkillCard>Skill 7</SkillCard>\r\n                <SkillCard>Skill 8</SkillCard>\r\n                <SkillCard>Skill 9</SkillCard>\r\n            </ScrollContainer>\r\n        </SkillContainer>\r\n    );\r\n}\r\n\r\nexport default Skill;\r\n","import styled from \"styled-components\";\r\n\r\nexport const MasonryOut = styled.div`\r\n    .my-masonry-grid {\r\n        display: -webkit-box; /* Not needed if autoprefixing */\r\n        display: -ms-flexbox; /* Not needed if autoprefixing */\r\n        display: flex;\r\n        margin-left: -30px; /* gutter size offset */\r\n        width: auto;\r\n    }\r\n    .my-masonry-grid_column {\r\n        padding-left: 30px; /* gutter size */\r\n        background-clip: padding-box;\r\n    }\r\n\r\n    /* Style your items */\r\n    .my-masonry-grid_column > div {\r\n        background: blue;\r\n        color: #fff;\r\n        margin-bottom: 30px;\r\n    }\r\n`;\r\n","import React from \"react\";\r\nimport { MasonryOut } from \"../styled/styledPortfolio\";\r\nimport Masonry from \"react-masonry-component\";\r\nfunction Portfolio() {\r\n    return (\r\n        <MasonryOut>\r\n            <Masonry>\r\n                {/* array of JSX items */}\r\n                <div>My Element</div>\r\n                <div>My Element</div>\r\n                <div>My Element</div>\r\n                <div>My Element</div>\r\n            </Masonry>\r\n        </MasonryOut>\r\n    );\r\n}\r\n\r\nexport default Portfolio;\r\n","import React from \"react\";\r\n\r\nfunction Contact() {\r\n    return (\r\n        <div>\r\n            <h1>Contact Me!!!!</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Contact;\r\n","import React from \"react\";\nimport {\n    Layout,\n    Sider,\n    Header,\n    Content,\n    Footer,\n    Right,\n} from \"./styled/styledApp\";\nimport Home from \"./pages/Home\";\nimport About from \"./pages/About\";\nimport Skill from \"./pages/Skill\";\nimport Portfolio from \"./pages/Portfolio\";\nimport Contact from \"./pages/Contact\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nfunction App() {\n    return (\n        <Router basename={process.env.PUBLIC_URL}>\n            <Layout>\n                <Sider>\n                    <h1>Sider</h1>\n                    <ul>\n                        <li>\n                            <Link to=\"/\">Home</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/about\">About</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/skill\">skill</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/portfolio\">portfolio</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/contact\">contact</Link>\n                        </li>\n                    </ul>\n                </Sider>\n                <Right>\n                    <Header>Header</Header>\n                    <Content>\n                        <Switch>\n                            <Route exact path=\"/\" component={() => <Home />} />\n                            <Route path=\"/about\" component={() => <About />} />\n                            <Route path=\"/skill\" component={() => <Skill />} />\n                            <Route\n                                path=\"/portfolio\"\n                                component={() => <Portfolio />}\n                            />\n                            <Route\n                                path=\"/contact\"\n                                component={() => <Contact />}\n                            />\n                            <Route\n                                component={() => <div>404 Not found </div>}\n                            />\n                        </Switch>\n                    </Content>\n                    <Footer>Footer</Footer>\n                </Right>\n            </Layout>\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/pexels-simon-migaj-1920x1212.5923d5f6.jpg\";"],"sourceRoot":""}